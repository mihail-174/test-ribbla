{"version":3,"sources":["blocks/block-come-visit/block-come-visit.scss","blocks/block-come-visit/block-come-visit.css","../styles/helpers/_media-queries.scss","../styles/helpers/_sprites.scss"],"names":[],"mappings":"AAEA,kBACI,QAAS,KACT,sBAAuB,+BACvB,IAAK,EAAE,gBACP,eAAgB,KCCpB,kCACE,YCoBM,CAAM,CAAA,KAAM,EDnBlB,QDPF,KAAA,ECUA,gCDVA,cAAA,KCcA,iCACE,MDKW,QCJX,cDhBF,KCmBA,uBACE,MDKc,MCFhB,4BACE,SE4GA,SF3GA,aDEsB,KCCxB,mCACE,QDEc,GA/BhB,iBAmCI,uBCJF,oBDKmB,EAAQ,MCJ3B,MDKM,KCJN,ODKM,KCJN,SDKM,SCJN,IDKM,ECJN,OCVM,EDWN,KDrCF,ECsCE,ODIU,KAAO,ECDnB,yBACE,YDKmB,CAAA,CAAA,KAAA,ECJnB,SDKgB,SCJhB,QDKe,KCJf,gBDKsB,ICJtB,cDKU,KCFZ,gCACE,QAAS,GACT,SAAU,SACV,IAAK,KACL,KAAM,QACN,MAAO,EACP,OAAQ,KACR,iBAAkB,QAClB,QAAS,GAGX,yCACE,kCACE,YAAa,CAAC,CAAC,GAGjB,yBACE,QAAS","file":"../block-come-visit.css","sourcesContent":["@import \"../../../styles/helpers/helpers\";\n\n.block-come-visit {\n    display: grid;\n    grid-template-columns: repeat(var(--grid-column), 1fr);\n    gap: 0 var(--grid-gap);\n    padding-bottom: 41px;\n    .block__content {\n        grid-column: 8/span 5;\n        padding: 49px 0;\n        @include max-screen(767px) {\n            grid-column: 1/-1;\n        }\n    }\n    .block__title {\n        margin-bottom: 49px;\n    }\n    .block__title2 {\n        color: #ff3b3d;\n        margin-bottom: 50px;\n    }\n    .btn {\n        width: 263px;\n        span {\n            position: relative;\n            padding-left: 32px;\n            &:before {\n                content: \"\";\n                @include sprite($view);\n                position: absolute;\n                top: 0;\n                bottom: 0;\n                left: 0;\n                margin: auto 0;\n            }\n        }\n    }\n    .image {\n        grid-column: 1/span 6;\n        position: relative;\n        display: flex;\n        justify-content: end;\n        padding-right: 14px;\n        @include max-screen(767px) {\n            display: none;\n        }\n        &::after {\n            content: \"\";\n            position: absolute;\n            top: 43px;\n            left: -2000px;\n            right: 0;\n            bottom: 50px;\n            background-color: #e8dfe0;\n            z-index: -1;\n        }\n    }\n}\n",null,"//  Author: Rafal Bromirski\r\n//  www: http://rafalbromirski.com/\r\n//  github: http://github.com/paranoida/sass-mediaqueries\r\n//\r\n//  Licensed under a MIT License\r\n//\r\n//  Version:\r\n//  1.6.1\r\n\r\n// --- generator ---------------------------------------------------------------\r\n\r\n@mixin mq($args...) {\r\n  $media-type: 'only screen';\r\n  $media-type-key: 'media-type';\r\n  $args: keywords($args);\r\n  $expr: '';\r\n\r\n  @if map-has-key($args, $media-type-key) {\r\n    $media-type: map-get($args, $media-type-key);\r\n    $args: map-remove($args, $media-type-key);\r\n  }\r\n\r\n  @each $key, $value in $args {\r\n    @if $value {\r\n      $expr: \"#{$expr} and (#{$key}: #{$value})\";\r\n    }\r\n  }\r\n\r\n  @media #{$media-type} #{$expr} {\r\n    @content;\r\n  }\r\n}\r\n\r\n// --- screen ------------------------------------------------------------------\r\n\r\n@mixin screen($min, $max, $orientation: false) {\r\n  @include mq($min-width: $min, $max-width: $max, $orientation: $orientation) {\r\n    @content;\r\n  }\r\n}\r\n\r\n@mixin max-screen($max) {\r\n  @include mq($max-width: $max) {\r\n    @content;\r\n  }\r\n}\r\n\r\n@mixin min-screen($min) {\r\n  @include mq($min-width: $min) {\r\n    @content;\r\n  }\r\n}\r\n\r\n@mixin screen-height($min, $max, $orientation: false) {\r\n  @include mq($min-height: $min, $max-height: $max, $orientation: $orientation) {\r\n    @content;\r\n  }\r\n}\r\n\r\n@mixin max-screen-height($max) {\r\n  @include mq($max-height: $max) {\r\n    @content;\r\n  }\r\n}\r\n\r\n@mixin min-screen-height($min) {\r\n  @include mq($min-height: $min) {\r\n    @content;\r\n  }\r\n}\r\n\r\n// --- hdpi --------------------------------------------------------------------\r\n\r\n@mixin hdpi($ratio: 1.3) {\r\n  @media only screen and (-webkit-min-device-pixel-ratio: $ratio),\r\n  only screen and (min-resolution: #{round($ratio*96)}dpi) {\r\n    @content;\r\n  }\r\n}\r\n\r\n// --- hdtv --------------------------------------------------------------------\r\n\r\n@mixin hdtv($standard: '1080') {\r\n  $min-width: false;\r\n  $min-height: false;\r\n\r\n  $standards: ('720p', 1280px, 720px)\r\n              ('1080', 1920px, 1080px)\r\n              ('2K', 2048px, 1080px)\r\n              ('4K', 4096px, 2160px);\r\n\r\n  @each $s in $standards {\r\n    @if $standard == nth($s, 1) {\r\n      $min-width: nth($s, 2);\r\n      $min-height: nth($s, 3);\r\n    }\r\n  }\r\n\r\n  @include mq(\r\n    $min-device-width: $min-width,\r\n    $min-device-height: $min-height,\r\n    $min-width: $min-width,\r\n    $min-height: $min-height\r\n  ) {\r\n    @content;\r\n  }\r\n}\r\n\r\n// --- iphone4 -----------------------------------------------------------------\r\n\r\n@mixin iphone4($orientation: false) {\r\n  $min: 320px;\r\n  $max: 480px;\r\n  $pixel-ratio: 2;\r\n  $aspect-ratio: '2/3';\r\n\r\n  @include mq(\r\n    $min-device-width: $min,\r\n    $max-device-width: $max,\r\n    $orientation: $orientation,\r\n    $device-aspect-ratio: $aspect-ratio,\r\n    $-webkit-device-pixel-ratio: $pixel-ratio\r\n  ) {\r\n    @content;\r\n  }\r\n}\r\n\r\n// --- iphone5 -----------------------------------------------------------------\r\n\r\n@mixin iphone5($orientation: false) {\r\n  $min: 320px;\r\n  $max: 568px;\r\n  $pixel-ratio: 2;\r\n  $aspect-ratio: '40/71';\r\n\r\n  @include mq(\r\n    $min-device-width: $min,\r\n    $max-device-width: $max,\r\n    $orientation: $orientation,\r\n    $device-aspect-ratio: $aspect-ratio,\r\n    $-webkit-device-pixel-ratio: $pixel-ratio\r\n  ) {\r\n    @content;\r\n  }\r\n}\r\n\r\n// --- iphone6 -----------------------------------------------------------------\r\n\r\n@mixin iphone6($orientation: false) {\r\n  $min: 375px;\r\n  $max: 667px;\r\n  $pixel-ratio: 2;\r\n\r\n  @include mq(\r\n    $min-device-width: $min,\r\n    $max-device-width: $max,\r\n    $orientation: $orientation,\r\n    $-webkit-device-pixel-ratio: $pixel-ratio\r\n  ) {\r\n    @content;\r\n  }\r\n}\r\n\r\n// --- iphone6 plus ------------------------------------------------------------\r\n\r\n@mixin iphone6-plus($orientation: false) {\r\n  $min: 414px;\r\n  $max: 736px;\r\n  $pixel-ratio: 3;\r\n\r\n  @include mq(\r\n    $min-device-width: $min,\r\n    $max-device-width: $max,\r\n    $orientation: $orientation,\r\n    $-webkit-device-pixel-ratio: $pixel-ratio\r\n  ) {\r\n    @content;\r\n  }\r\n}\r\n\r\n// --- ipad (all) --------------------------------------------------------------\r\n\r\n@mixin ipad($orientation: false) {\r\n  $min: 768px;\r\n  $max: 1024px;\r\n\r\n  @include mq(\r\n    $min-device-width: $min,\r\n    $max-device-width: $max,\r\n    $orientation: $orientation\r\n  ) {\r\n    @content;\r\n  }\r\n}\r\n\r\n// --- ipad-retina -------------------------------------------------------------\r\n\r\n@mixin ipad-retina($orientation: false) {\r\n  $min: 768px;\r\n  $max: 1024px;\r\n  $pixel-ratio: 2;\r\n\r\n  @include mq(\r\n    $min-device-width: $min,\r\n    $max-device-width: $max,\r\n    $orientation: $orientation,\r\n    $-webkit-device-pixel-ratio: $pixel-ratio\r\n  ) {\r\n    @content;\r\n  }\r\n}\r\n\r\n// --- orientation -------------------------------------------------------------\r\n\r\n@mixin landscape() {\r\n  @include mq($orientation: landscape) {\r\n    @content;\r\n  }\r\n}\r\n\r\n@mixin portrait() {\r\n  @include mq($orientation: portrait) {\r\n    @content;\r\n  }\r\n}\r\n","// SCSS variables are information about icon's compiled state, stored under its original file name\n//\n// .icon-home {\n//   width: $icon-home-width;\n// }\n//\n// The large array-like variables contain all information about a single icon\n// $icon-home: x y offset_x offset_y width height total_width total_height image_path;\n//\n// At the bottom of this section, we provide information about the spritesheet itself\n// $spritesheet: width height image $spritesheet-sprites;\n$arrow-left-name: 'arrow-left';\n$arrow-left-x: 59px;\n$arrow-left-y: 0px;\n$arrow-left-offset-x: -59px;\n$arrow-left-offset-y: 0px;\n$arrow-left-width: 38px;\n$arrow-left-height: 15px;\n$arrow-left-total-width: 97px;\n$arrow-left-total-height: 79px;\n$arrow-left-image: '../img/sprite.png';\n$arrow-left: (59px, 0px, -59px, 0px, 38px, 15px, 97px, 79px, '../img/sprite.png', 'arrow-left', );\n$arrow-right-name: 'arrow-right';\n$arrow-right-x: 59px;\n$arrow-right-y: 15px;\n$arrow-right-offset-x: -59px;\n$arrow-right-offset-y: -15px;\n$arrow-right-width: 38px;\n$arrow-right-height: 15px;\n$arrow-right-total-width: 97px;\n$arrow-right-total-height: 79px;\n$arrow-right-image: '../img/sprite.png';\n$arrow-right: (59px, 15px, -59px, -15px, 38px, 15px, 97px, 79px, '../img/sprite.png', 'arrow-right', );\n$location-name: 'location';\n$location-x: 24px;\n$location-y: 22px;\n$location-offset-x: -24px;\n$location-offset-y: -22px;\n$location-width: 9px;\n$location-height: 11px;\n$location-total-width: 97px;\n$location-total-height: 79px;\n$location-image: '../img/sprite.png';\n$location: (24px, 22px, -24px, -22px, 9px, 11px, 97px, 79px, '../img/sprite.png', 'location', );\n$ok-name: 'ok';\n$ok-x: 75px;\n$ok-y: 30px;\n$ok-offset-x: -75px;\n$ok-offset-y: -30px;\n$ok-width: 8px;\n$ok-height: 6px;\n$ok-total-width: 97px;\n$ok-total-height: 79px;\n$ok-image: '../img/sprite.png';\n$ok: (75px, 30px, -75px, -30px, 8px, 6px, 97px, 79px, '../img/sprite.png', 'ok', );\n$semicircle01-name: 'semicircle01';\n$semicircle01-x: 59px;\n$semicircle01-y: 30px;\n$semicircle01-offset-x: -59px;\n$semicircle01-offset-y: -30px;\n$semicircle01-width: 16px;\n$semicircle01-height: 7px;\n$semicircle01-total-width: 97px;\n$semicircle01-total-height: 79px;\n$semicircle01-image: '../img/sprite.png';\n$semicircle01: (59px, 30px, -59px, -30px, 16px, 7px, 97px, 79px, '../img/sprite.png', 'semicircle01', );\n$semicircle02-name: 'semicircle02';\n$semicircle02-x: 0px;\n$semicircle02-y: 0px;\n$semicircle02-offset-x: 0px;\n$semicircle02-offset-y: 0px;\n$semicircle02-width: 59px;\n$semicircle02-height: 22px;\n$semicircle02-total-width: 97px;\n$semicircle02-total-height: 79px;\n$semicircle02-image: '../img/sprite.png';\n$semicircle02: (0px, 0px, 0px, 0px, 59px, 22px, 97px, 79px, '../img/sprite.png', 'semicircle02', );\n$upload-name: 'upload';\n$upload-x: 0px;\n$upload-y: 46px;\n$upload-offset-x: 0px;\n$upload-offset-y: -46px;\n$upload-width: 15px;\n$upload-height: 33px;\n$upload-total-width: 97px;\n$upload-total-height: 79px;\n$upload-image: '../img/sprite.png';\n$upload: (0px, 46px, 0px, -46px, 15px, 33px, 97px, 79px, '../img/sprite.png', 'upload', );\n$view-name: 'view';\n$view-x: 0px;\n$view-y: 22px;\n$view-offset-x: 0px;\n$view-offset-y: -22px;\n$view-width: 24px;\n$view-height: 24px;\n$view-total-width: 97px;\n$view-total-height: 79px;\n$view-image: '../img/sprite.png';\n$view: (0px, 22px, 0px, -22px, 24px, 24px, 97px, 79px, '../img/sprite.png', 'view', );\n$spritesheet-width: 97px;\n$spritesheet-height: 79px;\n$spritesheet-image: '../img/sprite.png';\n$spritesheet-sprites: ($arrow-left, $arrow-right, $location, $ok, $semicircle01, $semicircle02, $upload, $view, );\n$spritesheet: (97px, 79px, '../img/sprite.png', $spritesheet-sprites, );\n\n// The provided mixins are intended to be used with the array-like variables\n//\n// .icon-home {\n//   @include sprite-width($icon-home);\n// }\n//\n// .icon-email {\n//   @include sprite($icon-email);\n// }\n//\n// Example usage in HTML:\n//\n// `display: block` sprite:\n// <div class=\"icon-home\"></div>\n//\n// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:\n//\n// // CSS\n// .icon {\n//   display: inline-block;\n// }\n//\n// // HTML\n// <i class=\"icon icon-home\"></i>\n@mixin sprite-width($sprite) {\n  width: nth($sprite, 5);\n}\n\n@mixin sprite-height($sprite) {\n  height: nth($sprite, 6);\n}\n\n@mixin sprite-position($sprite) {\n  $sprite-offset-x: nth($sprite, 3);\n  $sprite-offset-y: nth($sprite, 4);\n  background-position: $sprite-offset-x  $sprite-offset-y;\n}\n\n@mixin sprite-image($sprite) {\n  $sprite-image: nth($sprite, 9);\n  background-image: url(#{$sprite-image});\n}\n\n@mixin sprite($sprite) {\n  @include sprite-image($sprite);\n  @include sprite-position($sprite);\n  @include sprite-width($sprite);\n  @include sprite-height($sprite);\n}\n\n// The `sprites` mixin generates identical output to the CSS template\n//   but can be overridden inside of SCSS\n//\n// @include sprites($spritesheet-sprites);\n@mixin sprites($sprites) {\n  @each $sprite in $sprites {\n    $sprite-name: nth($sprite, 10);\n    .#{$sprite-name} {\n      @include sprite($sprite);\n    }\n  }\n}\n"]}